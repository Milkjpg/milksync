{"version":3,"file":"js/997.6c1923f2.js","mappings":"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","sources":["webpack://MilkSync/./src/components/GamesPage.vue","webpack://MilkSync/./src/components/GameSection.vue","webpack://MilkSync/./src/components/GameSection.vue?478d","webpack://MilkSync/./src/components/GamesPage.vue?572a"],"sourcesContent":["<template>\r\n  <v-container class=\"py-6\">\r\n    <h2 class=\"mb-6\">MilkSync Game Tracker</h2>\r\n\r\n    <v-btn color=\"primary\" @click=\"searchDialog = true\">🔍 Search Games</v-btn>\r\n    <v-btn color=\"secondary\" class=\"ml-2\" @click=\"editMode = !editMode\">\r\n      {{ editMode ? 'Exit Edit Mode' : 'Edit Games' }}\r\n    </v-btn>\r\n\r\n    <div v-if=\"editMode && selectedGames.length\" class=\"my-4\">\r\n      <v-btn color=\"error\" @click=\"bulkDelete\">Delete Selected</v-btn>\r\n      <div class=\"move-buttons\">\r\n        <v-btn color=\"success\" @click=\"bulkMove('completed')\">Move to Completed</v-btn>\r\n        <v-btn color=\"info\" @click=\"bulkMove('inProgress')\">Move to In Progress</v-btn>\r\n        <v-btn color=\"warning\" @click=\"bulkMove('planned')\">Move to Planned</v-btn>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Search Dialog -->\r\n<v-dialog v-model=\"searchDialog\" max-width=\"1100px\">\r\n  <v-card>\r\n    <v-card-title>\r\n      <span class=\"text-h6\">Search Games</span>\r\n      <v-spacer />\r\n      <v-btn icon @click=\"searchDialog = false\"><v-icon>mdi-close</v-icon></v-btn>\r\n    </v-card-title>\r\n\r\n    <v-card-text style=\"max-height: 80vh; overflow-y: auto;\">\r\n      <v-text-field\r\n        v-model=\"searchQuery\"\r\n        label=\"Search games\"\r\n        prepend-icon=\"mdi-magnify\"\r\n        @keyup.enter=\"searchGames\"\r\n        clearable\r\n      />\r\n\r\n      <div class=\"game-grid\">\r\n        <v-card\r\n          v-for=\"game in searchResults\"\r\n          :key=\"game.id\"\r\n          class=\"game-card\"\r\n          :class=\"{ selected: selectedGames.includes(game.id) }\"\r\n          @click=\"toggleGameSelection(game)\"\r\n        >\r\n          <v-img :src=\"game.background_image\" height=\"240px\" cover />\r\n          <div class=\"game-title\">{{ game.name || 'Untitled Game' }}</div>\r\n        </v-card>\r\n      </div>\r\n    </v-card-text>\r\n\r\n    <v-card-actions class=\"justify-space-between\">\r\n      <div>\r\n        <v-btn color=\"success\" @click=\"saveGameToCategory('completed')\" :disabled=\"selectedGames.length === 0\">Add to Completed</v-btn>\r\n        <v-btn color=\"info\" @click=\"saveGameToCategory('inProgress')\" :disabled=\"selectedGames.length === 0\">Add to In Progress</v-btn>\r\n        <v-btn color=\"warning\" @click=\"saveGameToCategory('planned')\" :disabled=\"selectedGames.length === 0\">Add to Planned</v-btn>\r\n      </div>\r\n      <v-spacer />\r\n      <v-btn text @click=\"searchDialog = false\">Done</v-btn>\r\n    </v-card-actions>\r\n  </v-card>\r\n</v-dialog>\r\n\r\n\r\n    <!-- Player Selection Dialog -->\r\n    <v-dialog v-model=\"playerDialog\" max-width=\"500px\">\r\n      <v-card>\r\n        <v-card-title>Select Players</v-card-title>\r\n        <v-card-text>\r\n          <v-select\r\n            v-model=\"selectedPlayers\"\r\n            :items=\"allUsernames\"\r\n            item-title=\"username\"\r\n            item-value=\"id\"\r\n            label=\"Who will be playing?\"\r\n            multiple\r\n            chips\r\n          />\r\n        </v-card-text>\r\n        <v-card-actions>\r\n          <v-btn color=\"primary\" @click=\"confirmGameAssignment\">Confirm</v-btn>\r\n          <v-btn text @click=\"playerDialog = false\">Cancel</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n\r\n    <!-- Game Info Dialog -->\r\n    <v-dialog v-model=\"gameInfoDialog\" max-width=\"600px\">\r\n      <v-card v-if=\"selectedGame\">\r\n        <v-img :src=\"selectedGame.background_image || selectedGame.image_url\" height=\"240px\" cover />\r\n        <v-card-title>{{ selectedGame.name }}</v-card-title>\r\n        <v-card-text>\r\n          <p><strong>Platforms:</strong> {{ formatPlatforms(selectedGame.platforms) }}</p>\r\n          <p><strong>Rating:</strong> {{ selectedGame.rating || 'Unrated' }}</p>\r\n          <p><strong>Genre:</strong> {{ selectedGame.genres?.map(g => g.name).join(', ') || 'N/A' }}</p>\r\n          <p><strong>Release Date:</strong> {{ selectedGame.released || 'Unknown' }}</p>\r\n          <p><strong>Developer:</strong> {{ selectedGame.developers?.map(d => d.name).join(', ') || 'N/A' }}</p>\r\n        </v-card-text>\r\n        <v-card-actions>\r\n          <v-spacer />\r\n          <v-btn text @click=\"gameInfoDialog = false\">Close</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n\r\n    <!-- Game Sections -->\r\n    <v-row>\r\n      <GameSection\r\n        title=\"✅ Completed\"\r\n        category=\"completed\"\r\n        :games=\"completedGames\"\r\n        :selectedGames=\"selectedGames\"\r\n        :editMode=\"editMode\"\r\n        @remove=\"deleteGame('completed', $event)\"\r\n        @move=\"moveGame\"\r\n        @info=\"editMode ? toggleGameSelection($event) : openGameInfo($event)\"\r\n        @editPlayers=\"openPlayerEditor\"\r\n      />\r\n      <GameSection\r\n        title=\"⏳ In Progress\"\r\n        category=\"inProgress\"\r\n        :games=\"inProgressGames\"\r\n        :selectedGames=\"selectedGames\"\r\n        :editMode=\"editMode\"\r\n        @remove=\"deleteGame('inProgress', $event)\"\r\n        @move=\"moveGame\"\r\n        @info=\"editMode ? toggleGameSelection($event) : openGameInfo($event)\"\r\n        @editPlayers=\"openPlayerEditor\"\r\n      />\r\n      <GameSection\r\n        title=\"📝 Planned\"\r\n        category=\"planned\"\r\n        :games=\"plannedGames\"\r\n        :selectedGames=\"selectedGames\"\r\n        :editMode=\"editMode\"\r\n        @remove=\"deleteGame('planned', $event)\"\r\n        @move=\"moveGame\"\r\n        @info=\"editMode ? toggleGameSelection($event) : openGameInfo($event)\"\r\n        @editPlayers=\"openPlayerEditor\"\r\n      />\r\n    </v-row>\r\n\r\n    <v-snackbar v-model=\"errorSnackbar\" color=\"error\">\r\n      ❌ Something went wrong\r\n    </v-snackbar>\r\n  </v-container>\r\n</template>\r\n\r\n\r\n\r\n\r\n<script>\r\nimport { supabase } from '../supabase';\r\nimport GameSection from '../components/GameSection.vue';\r\n\r\nexport default {\r\n  name: 'GamesPage',\r\n  components: { GameSection },\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      searchResults: [],\r\n      selectedGames: [],\r\n      completedGames: [],\r\n      inProgressGames: [],\r\n      plannedGames: [],\r\n      searchDialog: false,\r\n      gameInfoDialog: false,\r\n      playerDialog: false,\r\n      selectedGame: null,\r\n      errorSnackbar: false,\r\n      editMode: false,\r\n      allUsernames: [],\r\n      selectedPlayers: [],\r\n      pendingCategory: '',\r\n      editingGameId: null\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.fetchGames();\r\n\r\n    const { data: users, error } = await supabase\r\n      .from('profiles')\r\n      .select('id, username, avatar_url');\r\n\r\n    if (error) {\r\n      console.error('Failed to fetch usernames:', error.message);\r\n    } else {\r\n      this.allUsernames = users;\r\n    }\r\n  },\r\n  methods: {\r\n    async searchGames() {\r\n      const apiKey = '243d6955b70b401092f7169e2badd60b';\r\n      try {\r\n        const res = await fetch(`https://api.rawg.io/api/games?key=${apiKey}&search=${encodeURIComponent(this.searchQuery)}`);\r\n        const data = await res.json();\r\n        this.searchResults = data.results || [];\r\n      } catch (err) {\r\n        console.error('RAWG search error:', err);\r\n        this.errorSnackbar = true;\r\n      }\r\n    },\r\n    toggleGameSelection(game) {\r\n      const index = this.selectedGames.indexOf(game.id);\r\n      if (index === -1) {\r\n        this.selectedGames.push(game.id);\r\n      } else {\r\n        this.selectedGames.splice(index, 1);\r\n      }\r\n    },\r\n    async saveGameToCategory(category) {\r\n      if (!this.selectedGames.length) return;\r\n      this.pendingCategory = category;\r\n      this.playerDialog = true;\r\n    },\r\n    openPlayerEditor(game) {\r\n      this.editingGameId = game.id;\r\n      this.selectedPlayers = Array.isArray(game.game_players)\r\n        ? game.game_players.map(entry => entry.profile?.id).filter(Boolean)\r\n        : [];\r\n      this.playerDialog = true;\r\n    },\r\n    async confirmGameAssignment() {\r\n      if (this.editingGameId) {\r\n        await supabase\r\n          .from('game_players')\r\n          .delete()\r\n          .eq('game_id', this.editingGameId);\r\n\r\n        const updates = this.selectedPlayers.map(profile_id => ({\r\n          game_id: this.editingGameId,\r\n          profile_id\r\n        }));\r\n\r\n        const { error } = await supabase.from('game_players').insert(updates);\r\n        if (error) {\r\n          console.error('Player update error:', error.message);\r\n          this.errorSnackbar = true;\r\n        }\r\n\r\n        this.editingGameId = null;\r\n      } else {\r\n        const selected = this.searchResults.filter(game =>\r\n          this.selectedGames.includes(game.id)\r\n        );\r\n\r\n        for (const game of selected) {\r\n          const { data: insertedGame, error: insertError } = await supabase\r\n            .from('games')\r\n            .insert({\r\n              rawg_id: game.id,\r\n              name: game.name,\r\n              image_url: game.background_image || '',\r\n              platforms: Array.isArray(game.platforms)\r\n                ? game.platforms.map(p => p.platform.name)\r\n                : [],\r\n              category: this.pendingCategory\r\n            })\r\n            .select()\r\n            .single();\r\n\r\n          if (insertError) {\r\n            console.error('Supabase insert error:', insertError.message);\r\n            this.errorSnackbar = true;\r\n            continue;\r\n          }\r\n\r\n          const assignments = this.selectedPlayers.map(profile_id => ({\r\n            game_id: insertedGame.id,\r\n            profile_id\r\n          }));\r\n\r\n          const { error: assignError } = await supabase\r\n            .from('game_players')\r\n            .insert(assignments);\r\n\r\n          if (assignError) {\r\n            console.error('Player assignment error:', assignError.message);\r\n            this.errorSnackbar = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      this.selectedGames = [];\r\n      this.selectedPlayers = [];\r\n      this.playerDialog = false;\r\n      await this.fetchGames();\r\n    },\r\n    async fetchGames() {\r\n      const { data, error } = await supabase\r\n        .from('games')\r\n        .select(`\r\n          *,\r\n          game_players (\r\n            profile:profiles(id, username, avatar_url)\r\n          )\r\n        `);\r\n\r\n      if (error) {\r\n        console.error('Supabase fetch error:', error.message);\r\n        this.errorSnackbar = true;\r\n        return;\r\n      }\r\n\r\n      this.completedGames = data.filter(g => g.category === 'completed');\r\n      this.inProgressGames = data.filter(g => g.category === 'inProgress');\r\n      this.plannedGames = data.filter(g => g.category === 'planned');\r\n    },\r\n    async deleteGame(category, game) {\r\n      if (!game?.id) {\r\n        console.error('Delete failed: game object missing or invalid');\r\n        this.errorSnackbar = true;\r\n        return;\r\n      }\r\n\r\n      const { error } = await supabase\r\n        .from('games')\r\n        .delete()\r\n        .eq('id', game.id);\r\n\r\n      if (error) {\r\n        console.error('Supabase delete error:', error.message);\r\n        this.errorSnackbar = true;\r\n      } else {\r\n        await this.fetchGames();\r\n      }\r\n    },\r\n    async moveGame({ game, newCategory }) {\r\n      const { error } = await supabase\r\n        .from('games')\r\n        .update({ category: newCategory })\r\n        .eq('id', game.id);\r\n\r\n      if (error) {\r\n        console.error('Supabase move error:', error.message);\r\n        this.errorSnackbar = true;\r\n      } else {\r\n        await this.fetchGames();\r\n      }\r\n    },\r\n    async bulkDelete() {\r\n      if (!confirm('Delete selected games?')) return;\r\n\r\n      const { error } = await supabase\r\n        .from('games')\r\n        .delete()\r\n        .in('id', this.selectedGames);\r\n\r\n      if (error) {\r\n        console.error('Bulk delete error:', error.message);\r\n        this.errorSnackbar = true;\r\n      } else {\r\n        this.selectedGames = [];\r\n        this.editMode = false;\r\n        await this.fetchGames();\r\n      }\r\n    },\r\n    async bulkMove(category) {\r\n      const { error } = await supabase\r\n        .from('games')\r\n        .update({ category })\r\n        .in('id', this.selectedGames);\r\n\r\n      if (error) {\r\n        console.error('Bulk move error:', error.message);\r\n        this.errorSnackbar = true;\r\n      } else {\r\n        this.selectedGames = [];\r\n        this.editMode = false;\r\n        await this.fetchGames();\r\n      }\r\n    },\r\n    async openGameInfo(game) {\r\n      const apiKey = '243d6955b70b401092f7169e2badd60b';\r\n      try {\r\n        const res = await fetch(`https://api.rawg.io/api/games/${game.rawg_id || game.id}?key=${apiKey}`);\r\n        const fullGame = await res.json();\r\n        this.selectedGame = fullGame;\r\n      } catch (err) {\r\n        console.error('RAWG detail fetch error:', err);\r\n        this.selectedGame = game;\r\n      }\r\n      this.gameInfoDialog = true;\r\n    },\r\n    formatPlatforms(platforms) {\r\n      if (Array.isArray(platforms)) {\r\n        return platforms.map(p => p.platform?.name || p).join(', ');\r\n      }\r\n      return platforms || 'N/A';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n.game-grid {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 16px;\r\n  justify-content: flex-start;\r\n  padding: 12px 0;\r\n}\r\n\r\n.game-card {\r\n  width: 160px;\r\n  min-height: 300px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  background-color: #fffaf5;\r\n  border: 2px solid transparent;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);\r\n  transition: transform 0.2s ease, box-shadow 0.2s ease, border 0.2s ease;\r\n  cursor: pointer;\r\n}\r\n\r\n.game-card:hover {\r\n  transform: scale(1.05);\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.game-card.selected {\r\n  border-color: #1976d2;\r\n  background-color: #f0f8ff;\r\n  outline: 3px solid #90caf9;\r\n  outline-offset: -2px;\r\n}\r\n\r\n.game-title {\r\n  font-size: 0.85rem;\r\n  text-align: center;\r\n  padding: 8px;\r\n  font-weight: 600;\r\n  color: #5c3d2e;\r\n  background-color: #fff0e6;\r\n  border-top: 1px solid #eee;\r\n  white-space: normal;\r\n  word-break: break-word;\r\n}\r\n\r\n.move-buttons {\r\n  display: flex;\r\n  gap: 8px;\r\n  margin-top: 12px;\r\n}\r\n\r\n.v-select {\r\n  margin-left: 12px;\r\n}\r\n\r\n.v-btn + .v-btn {\r\n  margin-left: 8px;\r\n}\r\n</style>\r\n","<template>\r\n  <v-col cols=\"12\">\r\n    <h3 class=\"mb-4\">{{ title }}</h3>\r\n\r\n    <div class=\"game-grid\">\r\n      <v-card\r\n        v-for=\"game in games\"\r\n        :key=\"game.id || game.rawg_id\"\r\n        class=\"game-card\"\r\n        :class=\"{ selected: selectedGames.includes(game.id) }\"\r\n        @click=\"handleClick(game)\"\r\n      >\r\n        <!-- Game Cover -->\r\n        <v-img\r\n          :src=\"game.image_url || game.background_image\"\r\n          height=\"240px\"\r\n          cover\r\n          class=\"rounded-t-xl\"\r\n        />\r\n\r\n        <!-- Game Title -->\r\n        <div class=\"game-title\">\r\n          {{ game.name || 'Untitled Game' }}\r\n        </div>\r\n\r\n        <!-- Avatar Row -->\r\n        <div class=\"avatar-row\" v-if=\"getPlayerProfiles(game).length\">\r\n          <div\r\n            v-for=\"player in getPlayerProfiles(game)\"\r\n            :key=\"player.id\"\r\n            class=\"avatar-wrapper\"\r\n            :title=\"player.username\"\r\n          >\r\n            <img\r\n              :src=\"player.avatar_url?.trim() || defaultAvatarUrl\"\r\n              :alt=\"player.username\"\r\n              class=\"avatar\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Meatball Menu -->\r\n        <v-card-actions class=\"justify-center\" v-if=\"!editMode\">\r\n          <v-menu offset-y>\r\n            <template v-slot:activator=\"{ props }\">\r\n              <v-btn icon v-bind=\"props\" class=\"menu-btn\">\r\n                <v-icon>mdi-dots-vertical</v-icon>\r\n              </v-btn>\r\n            </template>\r\n            <v-list>\r\n              <v-list-item\r\n                v-for=\"option in moveOptions\"\r\n                :key=\"option\"\r\n                @click.stop=\"$emit('move', { game, newCategory: option })\"\r\n              >\r\n                <v-list-item-title>Move to {{ formatLabel(option) }}</v-list-item-title>\r\n              </v-list-item>\r\n              <v-divider />\r\n              <v-list-item @click.stop=\"$emit('editPlayers', game)\">\r\n                <v-list-item-title>Edit Players</v-list-item-title>\r\n              </v-list-item>\r\n              <v-list-item @click.stop=\"$emit('remove', game)\">\r\n                <v-list-item-title class=\"text-error\">Delete</v-list-item-title>\r\n              </v-list-item>\r\n            </v-list>\r\n          </v-menu>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </div>\r\n  </v-col>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport { supabase } from '../supabase';\r\n\r\nexport default {\r\n  name: 'GameSection',\r\n  props: {\r\n    title: String,\r\n    category: String,\r\n    games: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    selectedGames: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    editMode: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      defaultAvatarUrl: ''\r\n    };\r\n  },\r\n  computed: {\r\n    moveOptions() {\r\n      return ['completed', 'inProgress', 'planned'].filter(c => c !== this.category);\r\n    }\r\n  },\r\n  async mounted() {\r\n    const { data } = supabase.storage\r\n      .from('avatars')\r\n      .getPublicUrl('default-avatar.jpg');\r\n\r\n    if (data?.publicUrl) {\r\n      this.defaultAvatarUrl = data.publicUrl;\r\n    } else {\r\n      console.warn('⚠️ Default avatar URL not found in Supabase Storage');\r\n    }\r\n  },\r\n  methods: {\r\n    formatLabel(cat) {\r\n      return {\r\n        completed: '✅ Completed',\r\n        inProgress: '⏳ In Progress',\r\n        planned: '📝 Planned'\r\n      }[cat] || cat;\r\n    },\r\n    handleClick(game) {\r\n      this.$emit('info', game);\r\n    },\r\n    getPlayerProfiles(game) {\r\n      return Array.isArray(game.game_players)\r\n        ? game.game_players.map(entry => entry.profile).filter(Boolean)\r\n        : [];\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.game-grid {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 24px;\r\n  justify-content: center;\r\n  padding: 16px;\r\n}\r\n\r\n.game-card {\r\n  width: 180px;\r\n  min-height: 320px;\r\n  background-color: #334155;\r\n  border-radius: 16px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  overflow: hidden;\r\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  border: 2px solid transparent;\r\n}\r\n\r\n.game-card:hover {\r\n  transform: scale(1.04);\r\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.15);\r\n  border-color: #ffd9b3;\r\n}\r\n\r\n.game-card.selected {\r\n  border-color: #ffcc99;\r\n  background-color: #fff2e0;\r\n  outline: 3px solid #ffe0b3;\r\n  outline-offset: -2px;\r\n}\r\n\r\n.game-title {\r\n  font-size: 0.9rem;\r\n  text-align: center;\r\n  padding: 8px;\r\n  font-weight: 600;\r\n  color: #5c3d2e;\r\n  background-color: #fff0e6;\r\n}\r\n\r\n.avatar-row {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 6px;\r\n  margin-top: 8px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.avatar-wrapper {\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  background-color: #f5e9dc;\r\n  border: 2px solid #e0c4a8;\r\n}\r\n\r\n.avatar {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  border-radius: 12px;\r\n}\r\n</style>\r\n","import { render } from \"./GameSection.vue?vue&type=template&id=20a649a8&scoped=true\"\nimport script from \"./GameSection.vue?vue&type=script&lang=js\"\nexport * from \"./GameSection.vue?vue&type=script&lang=js\"\n\nimport \"./GameSection.vue?vue&type=style&index=0&id=20a649a8&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\Devin\\\\Documents\\\\resherbished calendar\\\\calendar\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-20a649a8\"]])\n\nexport default __exports__","import { render } from \"./GamesPage.vue?vue&type=template&id=103aecb2&scoped=true\"\nimport script from \"./GamesPage.vue?vue&type=script&lang=js\"\nexport * from \"./GamesPage.vue?vue&type=script&lang=js\"\n\nimport \"./GamesPage.vue?vue&type=style&index=0&id=103aecb2&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\Devin\\\\Documents\\\\resherbished calendar\\\\calendar\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-103aecb2\"]])\n\nexport default __exports__"],"names":["class","_createBlock","_component_v_container","_createElementVNode","_createVNode","_component_v_btn","color","onClick","_cache","$event","$data","searchDialog","editMode","selectedGames","length","_createElementBlock","_hoisted_1","$options","bulkDelete","_hoisted_2","bulkMove","_component_v_dialog","_component_v_card","_component_v_card_title","_component_v_spacer","icon","_component_v_icon","_component_v_card_text","style","_component_v_text_field","searchQuery","label","onKeyup","_withKeys","searchGames","clearable","_hoisted_3","_Fragment","_renderList","searchResults","game","key","id","_normalizeClass","selected","includes","toggleGameSelection","_component_v_img","src","background_image","height","cover","_hoisted_4","_toDisplayString","name","_component_v_card_actions","saveGameToCategory","disabled","text","playerDialog","_component_v_select","selectedPlayers","items","allUsernames","multiple","chips","confirmGameAssignment","gameInfoDialog","selectedGame","image_url","formatPlatforms","platforms","rating","genres","map","g","join","released","developers","d","_component_v_row","_component_GameSection","title","category","games","completedGames","onRemove","deleteGame","onMove","moveGame","onInfo","openGameInfo","onEditPlayers","openPlayerEditor","inProgressGames","plannedGames","_component_v_snackbar","errorSnackbar","_component_v_col","cols","$props","rawg_id","handleClick","getPlayerProfiles","player","username","avatar_url","trim","defaultAvatarUrl","alt","_component_v_menu","activator","_withCtx","props","_mergeProps","ref_for","_component_v_list","moveOptions","option","_component_v_list_item","_withModifiers","_ctx","$emit","newCategory","_component_v_list_item_title","formatLabel","_component_v_divider","String","type","Array","default","Boolean","data","computed","filter","c","this","mounted","supabase","storage","from","getPublicUrl","publicUrl","console","warn","methods","cat","completed","inProgress","planned","isArray","game_players","entry","profile","__exports__","components","GameSection","pendingCategory","editingGameId","fetchGames","users","error","select","message","apiKey","res","fetch","encodeURIComponent","json","results","err","index","indexOf","push","splice","delete","eq","updates","profile_id","game_id","insert","insertedGame","insertError","p","platform","single","assignments","assignError","update","confirm","in","fullGame","render"],"sourceRoot":""}